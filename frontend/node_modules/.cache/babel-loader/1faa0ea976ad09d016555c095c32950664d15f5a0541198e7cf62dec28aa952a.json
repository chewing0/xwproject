{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport axios from 'axios';\nexport default {\n  name: 'ModuleOneView',\n  data() {\n    return {\n      // 选项卡管理\n      activeTab: 'protocol',\n      tabs: [{\n        key: 'protocol',\n        label: '信令流程分析'\n      }, {\n        key: 'anomaly',\n        label: '异常检测'\n      }, {\n        key: 'faultdb',\n        label: '故障库管理'\n      }],\n      // 原有的数据\n      selectedFile: null,\n      loading: false,\n      error: null,\n      analysisResult: null,\n      loadingMessage: '处理中...',\n      // 异常检测相关\n      detectionType: 'comparison',\n      normalFile: null,\n      testFile: null,\n      detectionResult: null,\n      // 故障库管理相关\n      faultFile: null,\n      faultType: '',\n      faultDbInfo: {\n        total_records: 0,\n        fault_types: []\n      }\n    };\n  },\n  mounted() {\n    this.loadFaultDbInfo();\n  },\n  methods: {\n    // 原有方法\n    handleFileUpload(event) {\n      this.selectedFile = event.target.files[0];\n      this.error = null;\n      this.analysisResult = null;\n    },\n    async analyzeProtocol() {\n      if (!this.selectedFile) {\n        this.error = '请先选择文件';\n        return;\n      }\n      this.loading = true;\n      this.error = null;\n      this.analysisResult = null;\n      this.loadingMessage = '分析信令流程中...';\n      try {\n        const fileContent = await this.readFile(this.selectedFile);\n        const response = await axios.post('http://localhost:8000/api/analyze-protocol/', {\n          log_content: fileContent\n        });\n        this.analysisResult = response.data;\n      } catch (error) {\n        console.error('Error:', error);\n        this.error = error.response?.data?.error || '分析失败';\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 文件处理方法\n    handleNormalFileUpload(event) {\n      this.normalFile = event.target.files[0];\n      this.error = null;\n      this.detectionResult = null;\n    },\n    handleTestFileUpload(event) {\n      this.testFile = event.target.files[0];\n      this.error = null;\n      this.detectionResult = null;\n    },\n    handleFaultFileUpload(event) {\n      this.faultFile = event.target.files[0];\n      this.error = null;\n    },\n    // 异常检测方法\n    async detectAnomaly() {\n      if (!this.normalFile || !this.testFile) {\n        this.error = '请先选择正常日志和待检测日志文件';\n        return;\n      }\n      this.loading = true;\n      this.error = null;\n      this.detectionResult = null;\n      this.loadingMessage = '进行异常检测...';\n      try {\n        const normalContent = await this.readFile(this.normalFile);\n        const testContent = await this.readFile(this.testFile);\n        const response = await axios.post('http://localhost:8000/api/anomaly-detection/', {\n          normal_log: normalContent,\n          test_log: testContent\n        });\n        this.detectionResult = {\n          type: 'anomaly',\n          ...response.data\n        };\n      } catch (error) {\n        console.error('Error:', error);\n        this.error = error.response?.data?.error || '异常检测失败';\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 故障类型识别\n    async identifyFault() {\n      if (!this.testFile) {\n        this.error = '请先选择待检测日志文件';\n        return;\n      }\n      this.loading = true;\n      this.error = null;\n      this.detectionResult = null;\n      this.loadingMessage = '识别故障类型...';\n      try {\n        const testContent = await this.readFile(this.testFile);\n        const response = await axios.post('http://localhost:8000/api/fault-identification/', {\n          log_content: testContent\n        });\n        this.detectionResult = {\n          type: 'fault',\n          ...response.data\n        };\n      } catch (error) {\n        console.error('Error:', error);\n        this.error = error.response?.data?.error || '故障识别失败';\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 添加故障记录\n    async addFaultRecord() {\n      if (!this.faultFile || !this.faultType.trim()) {\n        this.error = '请选择故障日志文件并输入故障类型';\n        return;\n      }\n      this.loading = true;\n      this.error = null;\n      this.loadingMessage = '添加故障记录...';\n      try {\n        const faultContent = await this.readFile(this.faultFile);\n        const response = await axios.post('http://localhost:8000/api/add-fault-record/', {\n          log_content: faultContent,\n          fault_type: this.faultType.trim()\n        });\n        if (response.data.success) {\n          this.showSuccess('故障记录添加成功');\n          this.faultFile = null;\n          this.faultType = '';\n          this.loadFaultDbInfo(); // 刷新故障库信息\n        } else {\n          this.error = response.data.error || '添加失败';\n        }\n      } catch (error) {\n        console.error('Error:', error);\n        this.error = error.response?.data?.error || '添加故障记录失败';\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 加载故障库信息\n    async loadFaultDbInfo() {\n      try {\n        const response = await axios.get('http://localhost:8000/api/fault-database-info/');\n        this.faultDbInfo = response.data;\n      } catch (error) {\n        console.error('加载故障库信息失败:', error);\n        // 不显示错误，因为这是后台操作\n      }\n    },\n    // 工具方法\n    readFile(file) {\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = e => resolve(e.target.result);\n        reader.onerror = e => reject(e);\n        reader.readAsText(file);\n      });\n    },\n    formatKey(key) {\n      return key.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n    },\n    formatValue(value) {\n      if (Array.isArray(value)) {\n        return value.join(', ');\n      }\n      return value;\n    },\n    showSuccess(message) {\n      // 简单的成功提示，可以后续集成更好的通知组件\n      alert('成功: ' + message);\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","activeTab","tabs","key","label","selectedFile","loading","error","analysisResult","loadingMessage","detectionType","normalFile","testFile","detectionResult","faultFile","faultType","faultDbInfo","total_records","fault_types","mounted","loadFaultDbInfo","methods","handleFileUpload","event","target","files","analyzeProtocol","fileContent","readFile","response","post","log_content","console","handleNormalFileUpload","handleTestFileUpload","handleFaultFileUpload","detectAnomaly","normalContent","testContent","normal_log","test_log","type","identifyFault","addFaultRecord","trim","faultContent","fault_type","success","showSuccess","get","file","Promise","resolve","reject","reader","FileReader","onload","e","result","onerror","readAsText","formatKey","split","map","word","charAt","toUpperCase","slice","join","formatValue","value","Array","isArray","message","alert"],"sources":["D:\\wby\\projectfiles\\xwproject\\frontend\\src\\views\\Module1.vue"],"sourcesContent":["<template>\r\n  <div class=\"module\">\r\n    <h1>日志分析系统</h1>\r\n    \r\n    <!-- 功能选项卡 -->\r\n    <div class=\"tabs\">\r\n      <button \r\n        v-for=\"tab in tabs\" \r\n        :key=\"tab.key\"\r\n        :class=\"['tab-button', { active: activeTab === tab.key }]\"\r\n        @click=\"activeTab = tab.key\"\r\n      >\r\n        {{ tab.label }}\r\n      </button>\r\n    </div>\r\n\r\n    <!-- 信令流程分析 -->\r\n    <div v-if=\"activeTab === 'protocol'\" class=\"content\">\r\n      <h2>信令流程分析</h2>\r\n      <div class=\"upload-section\">\r\n        <input type=\"file\" @change=\"handleFileUpload\" accept=\".txt\" ref=\"fileInput\" />\r\n        <button @click=\"analyzeProtocol\" :disabled=\"!selectedFile || loading\">分析日志</button>\r\n      </div>\r\n\r\n      <div v-if=\"loading\" class=\"loading\">\r\n        分析中...\r\n      </div>\r\n\r\n      <div v-if=\"error\" class=\"error\">\r\n        {{ error }}\r\n      </div>\r\n\r\n      <div v-if=\"analysisResult\" class=\"analysis-result\">\r\n        <!-- ...existing analysis result code... -->\r\n        <h3>分析结果</h3>\r\n        \r\n        <!-- 摘要信息 -->\r\n        <div class=\"summary-section\">\r\n          <h4>摘要</h4>\r\n          <div class=\"summary-grid\">\r\n            <div class=\"summary-item\">\r\n              <span class=\"label\">总流程数:</span>\r\n              <span class=\"value\">{{ analysisResult.report.summary.total_flows }}</span>\r\n            </div>\r\n            <div class=\"summary-item\">\r\n              <span class=\"label\">已完成:</span>\r\n              <span class=\"value\">{{ analysisResult.report.summary.completed }}</span>\r\n            </div>\r\n            <div class=\"summary-item\">\r\n              <span class=\"label\">进行中:</span>\r\n              <span class=\"value\">{{ analysisResult.report.summary.in_progress }}</span>\r\n            </div>\r\n            <div class=\"summary-item\">\r\n              <span class=\"label\">未开始:</span>\r\n              <span class=\"value\">{{ analysisResult.report.summary.not_started }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 第一个错误信息 -->\r\n        <div class=\"error-section\" v-if=\"analysisResult.first_error.status !== 'all_flows_completed'\">\r\n          <h4>第一个错误</h4>\r\n          <div class=\"error-details\">\r\n            <p><strong>阻塞流程:</strong> {{ analysisResult.first_error.blocking_flow }}</p>\r\n            <p><strong>状态:</strong> {{ analysisResult.first_error.status }}</p>\r\n            <div v-if=\"analysisResult.first_error.status_details\">\r\n              <p v-for=\"(value, key) in analysisResult.first_error.status_details\" :key=\"key\">\r\n                <strong>{{ formatKey(key) }}:</strong> {{ formatValue(value) }}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 进行中的流程 -->\r\n        <div class=\"in-progress-section\" v-if=\"analysisResult.report.in_progress_flows.length > 0\">\r\n          <h4>进行中的流程</h4>\r\n          <div v-for=\"flow in analysisResult.report.in_progress_flows\" :key=\"flow.flow_name\" class=\"flow-item\">\r\n            <h5>{{ flow.flow_name }}</h5>\r\n            <p>进度: {{ flow.completed_steps }}/{{ flow.total_steps }}</p>\r\n            <div v-if=\"flow.missing_steps.length > 0\">\r\n              <p>缺失步骤:</p>\r\n              <ul>\r\n                <li v-for=\"(step, index) in flow.missing_steps\" :key=\"index\">\r\n                  {{ step.msg }} ({{ step.protocol }}, {{ step.dir }})\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 问题流程 -->\r\n        <div class=\"problematic-section\" v-if=\"analysisResult.report.problematic_flows.length > 0\">\r\n          <h4>问题流程</h4>\r\n          <div v-for=\"flow in analysisResult.report.problematic_flows\" :key=\"flow.flow_name\" class=\"flow-item\">\r\n            <h5>{{ flow.flow_name }}</h5>\r\n            <p>问题: {{ flow.issue }}</p>\r\n            <p>预期第一步: {{ flow.missing_initial_step.msg }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 异常检测 -->\r\n    <div v-if=\"activeTab === 'anomaly'\" class=\"content\">\r\n      <h2>异常检测</h2>\r\n      <div class=\"anomaly-detection\">\r\n        <div class=\"detection-type\">\r\n          <label>检测类型:</label>\r\n          <select v-model=\"detectionType\">\r\n            <option value=\"comparison\">与正常日志对比</option>\r\n            <option value=\"fault_identify\">故障类型识别</option>\r\n          </select>\r\n        </div>\r\n\r\n        <!-- 对比检测 -->\r\n        <div v-if=\"detectionType === 'comparison'\" class=\"comparison-detection\">\r\n          <div class=\"file-upload-group\">\r\n            <div class=\"upload-item\">\r\n              <label>正常日志文件:</label>\r\n              <input type=\"file\" @change=\"handleNormalFileUpload\" accept=\".txt\" />\r\n              <span v-if=\"normalFile\" class=\"file-name\">{{ normalFile.name }}</span>\r\n            </div>\r\n            <div class=\"upload-item\">\r\n              <label>待检测日志文件:</label>\r\n              <input type=\"file\" @change=\"handleTestFileUpload\" accept=\".txt\" />\r\n              <span v-if=\"testFile\" class=\"file-name\">{{ testFile.name }}</span>\r\n            </div>\r\n          </div>\r\n          <button @click=\"detectAnomaly\" :disabled=\"!normalFile || !testFile || loading\" class=\"btn btn-primary\">\r\n            开始异常检测\r\n          </button>\r\n        </div>\r\n\r\n        <!-- 故障识别 -->\r\n        <div v-if=\"detectionType === 'fault_identify'\" class=\"fault-identification\">\r\n          <div class=\"upload-item\">\r\n            <label>待检测日志文件:</label>\r\n            <input type=\"file\" @change=\"handleTestFileUpload\" accept=\".txt\" />\r\n            <span v-if=\"testFile\" class=\"file-name\">{{ testFile.name }}</span>\r\n          </div>\r\n          <button @click=\"identifyFault\" :disabled=\"!testFile || loading\" class=\"btn btn-primary\">\r\n            识别故障类型\r\n          </button>\r\n        </div>\r\n\r\n        <!-- 检测结果 -->\r\n        <div v-if=\"detectionResult\" class=\"detection-result\">\r\n          <h3>检测结果</h3>\r\n          <div v-if=\"detectionResult.type === 'anomaly'\" class=\"anomaly-result\">\r\n            <div class=\"result-item\">\r\n              <span class=\"label\">相似度:</span>\r\n              <span class=\"value\">{{ detectionResult.similarity.toFixed(4) }}</span>\r\n            </div>\r\n            <div class=\"result-item\">\r\n              <span class=\"label\">阈值:</span>\r\n              <span class=\"value\">{{ detectionResult.threshold }}</span>\r\n            </div>\r\n            <div class=\"result-status\" :class=\"detectionResult.is_anomaly ? 'anomaly' : 'normal'\">\r\n              {{ detectionResult.is_anomaly ? '🚨 检测到异常' : '✅ 日志正常' }}\r\n            </div>\r\n            <p class=\"result-description\">{{ detectionResult.description }}</p>\r\n          </div>\r\n\r\n          <div v-if=\"detectionResult.type === 'fault'\" class=\"fault-result\">\r\n            <div class=\"result-item\">\r\n              <span class=\"label\">预测故障类型:</span>\r\n              <span class=\"value fault-type\">{{ detectionResult.predicted_fault }}</span>\r\n            </div>\r\n            <div class=\"result-item\">\r\n              <span class=\"label\">置信度:</span>\r\n              <span class=\"value\">{{ detectionResult.confidence.toFixed(4) }}</span>\r\n            </div>\r\n            <div v-if=\"detectionResult.top_matches\" class=\"top-matches\">\r\n              <h4>相似度排名:</h4>\r\n              <div v-for=\"(match, index) in detectionResult.top_matches\" :key=\"index\" class=\"match-item\">\r\n                <span class=\"rank\">{{ index + 1 }}.</span>\r\n                <span class=\"fault-name\">{{ match.fault_type }}</span>\r\n                <span class=\"similarity\">({{ match.similarity.toFixed(4) }})</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 故障库管理 -->\r\n    <div v-if=\"activeTab === 'faultdb'\" class=\"content\">\r\n      <h2>故障库管理</h2>\r\n      <div class=\"fault-database\">\r\n        <!-- 添加故障记录 -->\r\n        <div class=\"add-fault-section\">\r\n          <h3>添加故障记录</h3>\r\n          <div class=\"upload-item\">\r\n            <label>故障日志文件:</label>\r\n            <input type=\"file\" @change=\"handleFaultFileUpload\" accept=\".txt\" />\r\n            <span v-if=\"faultFile\" class=\"file-name\">{{ faultFile.name }}</span>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label>故障类型:</label>\r\n            <input v-model=\"faultType\" placeholder=\"例如: 连接超时, 内存溢出, 配置错误\" />\r\n          </div>\r\n          <button @click=\"addFaultRecord\" :disabled=\"!faultFile || !faultType || loading\" class=\"btn btn-success\">\r\n            添加到故障库\r\n          </button>\r\n        </div>\r\n\r\n        <!-- 故障库信息 -->\r\n        <div class=\"fault-info-section\">\r\n          <h3>故障库信息</h3>\r\n          <div class=\"info-grid\">\r\n            <div class=\"info-item\">\r\n              <span class=\"label\">记录总数:</span>\r\n              <span class=\"value\">{{ faultDbInfo.total_records }}</span>\r\n            </div>\r\n            <div class=\"info-item\">\r\n              <span class=\"label\">故障类型数:</span>\r\n              <span class=\"value\">{{ faultDbInfo.fault_types.length }}</span>\r\n            </div>\r\n          </div>\r\n          <button @click=\"loadFaultDbInfo\" class=\"btn btn-secondary\">刷新信息</button>\r\n        </div>\r\n\r\n        <!-- 故障类型列表 -->\r\n        <div v-if=\"faultDbInfo.fault_types.length > 0\" class=\"fault-types-section\">\r\n          <h3>故障类型列表</h3>\r\n          <div class=\"fault-types-list\">\r\n            <div v-for=\"(type, index) in faultDbInfo.fault_types\" :key=\"index\" class=\"fault-type-item\">\r\n              <span class=\"type-name\">{{ type.name }}</span>\r\n              <span class=\"type-count\">{{ type.count }} 条记录</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 加载状态 -->\r\n    <div v-if=\"loading\" class=\"loading-overlay\">\r\n      <div class=\"loading-spinner\">\r\n        <div class=\"spinner\"></div>\r\n        <p>{{ loadingMessage }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'ModuleOneView',\r\n  data() {\r\n    return {\r\n      // 选项卡管理\r\n      activeTab: 'protocol',\r\n      tabs: [\r\n        { key: 'protocol', label: '信令流程分析' },\r\n        { key: 'anomaly', label: '异常检测' },\r\n        { key: 'faultdb', label: '故障库管理' }\r\n      ],\r\n      \r\n      // 原有的数据\r\n      selectedFile: null,\r\n      loading: false,\r\n      error: null,\r\n      analysisResult: null,\r\n      loadingMessage: '处理中...',\r\n      \r\n      // 异常检测相关\r\n      detectionType: 'comparison',\r\n      normalFile: null,\r\n      testFile: null,\r\n      detectionResult: null,\r\n      \r\n      // 故障库管理相关\r\n      faultFile: null,\r\n      faultType: '',\r\n      faultDbInfo: {\r\n        total_records: 0,\r\n        fault_types: []\r\n      }\r\n    }\r\n  },\r\n  \r\n  mounted() {\r\n    this.loadFaultDbInfo()\r\n  },\r\n  \r\n  methods: {\r\n    // 原有方法\r\n    handleFileUpload(event) {\r\n      this.selectedFile = event.target.files[0]\r\n      this.error = null\r\n      this.analysisResult = null\r\n    },\r\n    \r\n    async analyzeProtocol() {\r\n      if (!this.selectedFile) {\r\n        this.error = '请先选择文件'\r\n        return\r\n      }\r\n\r\n      this.loading = true\r\n      this.error = null\r\n      this.analysisResult = null\r\n      this.loadingMessage = '分析信令流程中...'\r\n\r\n      try {\r\n        const fileContent = await this.readFile(this.selectedFile)\r\n        const response = await axios.post('http://localhost:8000/api/analyze-protocol/', {\r\n          log_content: fileContent\r\n        })\r\n        this.analysisResult = response.data\r\n      } catch (error) {\r\n        console.error('Error:', error)\r\n        this.error = error.response?.data?.error || '分析失败'\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n    \r\n    // 文件处理方法\r\n    handleNormalFileUpload(event) {\r\n      this.normalFile = event.target.files[0]\r\n      this.error = null\r\n      this.detectionResult = null\r\n    },\r\n    \r\n    handleTestFileUpload(event) {\r\n      this.testFile = event.target.files[0]\r\n      this.error = null\r\n      this.detectionResult = null\r\n    },\r\n    \r\n    handleFaultFileUpload(event) {\r\n      this.faultFile = event.target.files[0]\r\n      this.error = null\r\n    },\r\n    \r\n    // 异常检测方法\r\n    async detectAnomaly() {\r\n      if (!this.normalFile || !this.testFile) {\r\n        this.error = '请先选择正常日志和待检测日志文件'\r\n        return\r\n      }\r\n\r\n      this.loading = true\r\n      this.error = null\r\n      this.detectionResult = null\r\n      this.loadingMessage = '进行异常检测...'\r\n\r\n      try {\r\n        const normalContent = await this.readFile(this.normalFile)\r\n        const testContent = await this.readFile(this.testFile)\r\n        \r\n        const response = await axios.post('http://localhost:8000/api/anomaly-detection/', {\r\n          normal_log: normalContent,\r\n          test_log: testContent\r\n        })\r\n        \r\n        this.detectionResult = {\r\n          type: 'anomaly',\r\n          ...response.data\r\n        }\r\n      } catch (error) {\r\n        console.error('Error:', error)\r\n        this.error = error.response?.data?.error || '异常检测失败'\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n    \r\n    // 故障类型识别\r\n    async identifyFault() {\r\n      if (!this.testFile) {\r\n        this.error = '请先选择待检测日志文件'\r\n        return\r\n      }\r\n\r\n      this.loading = true\r\n      this.error = null\r\n      this.detectionResult = null\r\n      this.loadingMessage = '识别故障类型...'\r\n\r\n      try {\r\n        const testContent = await this.readFile(this.testFile)\r\n        \r\n        const response = await axios.post('http://localhost:8000/api/fault-identification/', {\r\n          log_content: testContent\r\n        })\r\n        \r\n        this.detectionResult = {\r\n          type: 'fault',\r\n          ...response.data\r\n        }\r\n      } catch (error) {\r\n        console.error('Error:', error)\r\n        this.error = error.response?.data?.error || '故障识别失败'\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n    \r\n    // 添加故障记录\r\n    async addFaultRecord() {\r\n      if (!this.faultFile || !this.faultType.trim()) {\r\n        this.error = '请选择故障日志文件并输入故障类型'\r\n        return\r\n      }\r\n\r\n      this.loading = true\r\n      this.error = null\r\n      this.loadingMessage = '添加故障记录...'\r\n\r\n      try {\r\n        const faultContent = await this.readFile(this.faultFile)\r\n        \r\n        const response = await axios.post('http://localhost:8000/api/add-fault-record/', {\r\n          log_content: faultContent,\r\n          fault_type: this.faultType.trim()\r\n        })\r\n        \r\n        if (response.data.success) {\r\n          this.showSuccess('故障记录添加成功')\r\n          this.faultFile = null\r\n          this.faultType = ''\r\n          this.loadFaultDbInfo() // 刷新故障库信息\r\n        } else {\r\n          this.error = response.data.error || '添加失败'\r\n        }\r\n      } catch (error) {\r\n        console.error('Error:', error)\r\n        this.error = error.response?.data?.error || '添加故障记录失败'\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n    \r\n    // 加载故障库信息\r\n    async loadFaultDbInfo() {\r\n      try {\r\n        const response = await axios.get('http://localhost:8000/api/fault-database-info/')\r\n        this.faultDbInfo = response.data\r\n      } catch (error) {\r\n        console.error('加载故障库信息失败:', error)\r\n        // 不显示错误，因为这是后台操作\r\n      }\r\n    },\r\n    \r\n    // 工具方法\r\n    readFile(file) {\r\n      return new Promise((resolve, reject) => {\r\n        const reader = new FileReader()\r\n        reader.onload = (e) => resolve(e.target.result)\r\n        reader.onerror = (e) => reject(e)\r\n        reader.readAsText(file)\r\n      })\r\n    },\r\n    \r\n    formatKey(key) {\r\n      return key.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')\r\n    },\r\n    \r\n    formatValue(value) {\r\n      if (Array.isArray(value)) {\r\n        return value.join(', ')\r\n      }\r\n      return value\r\n    },\r\n    \r\n    showSuccess(message) {\r\n      // 简单的成功提示，可以后续集成更好的通知组件\r\n      alert('成功: ' + message)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.module {\r\n  padding: 2rem;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  background-color: #f8f9fa;\r\n  min-height: 100vh;\r\n}\r\n\r\nh1 {\r\n  color: #2c3e50;\r\n  text-align: center;\r\n  margin-bottom: 2rem;\r\n  font-size: 2.5rem;\r\n  font-weight: 700;\r\n}\r\n\r\n/* 选项卡样式 */\r\n.tabs {\r\n  display: flex;\r\n  justify-content: center;\r\n  background-color: #ffffff;\r\n  border-radius: 12px;\r\n  padding: 8px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.tab-button {\r\n  padding: 12px 24px;\r\n  margin: 0 4px;\r\n  background-color: transparent;\r\n  color: #6c757d;\r\n  border: none;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  font-weight: 500;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.tab-button.active {\r\n  background-color: #007bff;\r\n  color: white;\r\n  box-shadow: 0 2px 8px rgba(0, 123, 255, 0.3);\r\n}\r\n\r\n.tab-button:hover:not(.active) {\r\n  background-color: #e9ecef;\r\n  color: #495057;\r\n}\r\n\r\n/* 内容区域 */\r\n.content {\r\n  background-color: #ffffff;\r\n  border-radius: 12px;\r\n  padding: 2rem;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n  margin-top: 2rem;\r\n}\r\n\r\n.content h2 {\r\n  color: #2c3e50;\r\n  margin-bottom: 1.5rem;\r\n  padding-bottom: 0.5rem;\r\n  border-bottom: 2px solid #e9ecef;\r\n}\r\n\r\n/* 上传区域样式 */\r\n.upload-section {\r\n  margin-bottom: 2rem;\r\n  display: flex;\r\n  gap: 1rem;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.upload-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.upload-item label {\r\n  font-weight: 600;\r\n  color: #495057;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.file-upload-group {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 2rem;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.file-name {\r\n  color: #28a745;\r\n  font-size: 0.9rem;\r\n  font-style: italic;\r\n}\r\n\r\ninput[type=\"file\"] {\r\n  padding: 8px 12px;\r\n  border: 2px dashed #dee2e6;\r\n  border-radius: 8px;\r\n  background-color: #f8f9fa;\r\n  cursor: pointer;\r\n  transition: border-color 0.3s ease;\r\n}\r\n\r\ninput[type=\"file\"]:hover {\r\n  border-color: #007bff;\r\n}\r\n\r\ninput[type=\"text\"], select {\r\n  padding: 12px 16px;\r\n  border: 1px solid #dee2e6;\r\n  border-radius: 8px;\r\n  font-size: 1rem;\r\n  transition: border-color 0.3s ease;\r\n}\r\n\r\ninput[type=\"text\"]:focus, select:focus {\r\n  outline: none;\r\n  border-color: #007bff;\r\n  box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.1);\r\n}\r\n\r\n/* 按钮样式 */\r\n.btn {\r\n  padding: 12px 24px;\r\n  border: none;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  font-weight: 600;\r\n  font-size: 1rem;\r\n  transition: all 0.3s ease;\r\n  margin: 0.25rem;\r\n}\r\n\r\n.btn-primary {\r\n  background-color: #007bff;\r\n  color: white;\r\n}\r\n\r\n.btn-primary:hover:not(:disabled) {\r\n  background-color: #0056b3;\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 12px rgba(0, 123, 255, 0.3);\r\n}\r\n\r\n.btn-success {\r\n  background-color: #28a745;\r\n  color: white;\r\n}\r\n\r\n.btn-success:hover:not(:disabled) {\r\n  background-color: #1e7e34;\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 12px rgba(40, 167, 69, 0.3);\r\n}\r\n\r\n.btn-secondary {\r\n  background-color: #6c757d;\r\n  color: white;\r\n}\r\n\r\n.btn-secondary:hover:not(:disabled) {\r\n  background-color: #545b62;\r\n}\r\n\r\n.btn:disabled {\r\n  background-color: #e9ecef;\r\n  color: #6c757d;\r\n  cursor: not-allowed;\r\n  transform: none;\r\n  box-shadow: none;\r\n}\r\n\r\n/* 检测类型选择 */\r\n.detection-type {\r\n  margin-bottom: 2rem;\r\n  padding: 1rem;\r\n  background-color: #f8f9fa;\r\n  border-radius: 8px;\r\n}\r\n\r\n.detection-type label {\r\n  font-weight: 600;\r\n  margin-right: 1rem;\r\n  color: #495057;\r\n}\r\n\r\n.detection-type select {\r\n  min-width: 200px;\r\n}\r\n\r\n/* 结果显示区域 */\r\n.detection-result, .analysis-result {\r\n  margin-top: 2rem;\r\n  padding: 1.5rem;\r\n  background-color: #f8f9fa;\r\n  border-radius: 12px;\r\n  border: 1px solid #e9ecef;\r\n}\r\n\r\n.detection-result h3, .analysis-result h3 {\r\n  color: #2c3e50;\r\n  margin-bottom: 1rem;\r\n  padding-bottom: 0.5rem;\r\n  border-bottom: 2px solid #dee2e6;\r\n}\r\n\r\n.result-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0.75rem 1rem;\r\n  margin: 0.5rem 0;\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.result-status {\r\n  padding: 0.75rem 1.5rem;\r\n  border-radius: 8px;\r\n  font-weight: 600;\r\n  text-align: center;\r\n  margin: 1rem 0;\r\n}\r\n\r\n.result-status.normal {\r\n  background-color: #d4edda;\r\n  color: #155724;\r\n  border: 1px solid #c3e6cb;\r\n}\r\n\r\n.result-status.anomaly {\r\n  background-color: #f8d7da;\r\n  color: #721c24;\r\n  border: 1px solid #f5c6cb;\r\n}\r\n\r\n.result-description {\r\n  padding: 1rem;\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  border-left: 4px solid #007bff;\r\n  margin-top: 1rem;\r\n}\r\n\r\n.fault-type {\r\n  color: #dc3545;\r\n  font-weight: 600;\r\n}\r\n\r\n/* 匹配结果 */\r\n.top-matches {\r\n  margin-top: 1rem;\r\n}\r\n\r\n.top-matches h4 {\r\n  color: #495057;\r\n  margin-bottom: 0.75rem;\r\n}\r\n\r\n.match-item {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0.5rem 1rem;\r\n  margin: 0.25rem 0;\r\n  background-color: white;\r\n  border-radius: 6px;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.rank {\r\n  font-weight: 600;\r\n  color: #007bff;\r\n  margin-right: 0.75rem;\r\n  min-width: 20px;\r\n}\r\n\r\n.fault-name {\r\n  flex: 1;\r\n  color: #495057;\r\n}\r\n\r\n.similarity {\r\n  color: #6c757d;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n/* 故障库管理 */\r\n.fault-database {\r\n  display: grid;\r\n  gap: 2rem;\r\n}\r\n\r\n.add-fault-section, .fault-info-section, .fault-types-section {\r\n  padding: 1.5rem;\r\n  background-color: #f8f9fa;\r\n  border-radius: 12px;\r\n  border: 1px solid #e9ecef;\r\n}\r\n\r\n.add-fault-section h3, .fault-info-section h3, .fault-types-section h3 {\r\n  color: #2c3e50;\r\n  margin-bottom: 1rem;\r\n  padding-bottom: 0.5rem;\r\n  border-bottom: 2px solid #dee2e6;\r\n}\r\n\r\n.form-group {\r\n  margin: 1rem 0;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  font-weight: 600;\r\n  color: #495057;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.form-group input {\r\n  width: 100%;\r\n  padding: 12px 16px;\r\n  border: 1px solid #dee2e6;\r\n  border-radius: 8px;\r\n}\r\n\r\n.info-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  gap: 1rem;\r\n  margin: 1rem 0;\r\n}\r\n\r\n.info-item {\r\n  background-color: white;\r\n  padding: 1rem;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\r\n  text-align: center;\r\n}\r\n\r\n.info-item .label {\r\n  display: block;\r\n  font-weight: 600;\r\n  color: #6c757d;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.info-item .value {\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  color: #007bff;\r\n}\r\n\r\n.fault-types-list {\r\n  display: grid;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.fault-type-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0.75rem 1rem;\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.type-name {\r\n  font-weight: 600;\r\n  color: #495057;\r\n}\r\n\r\n.type-count {\r\n  color: #6c757d;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n/* 加载状态 */\r\n.loading {\r\n  text-align: center;\r\n  padding: 2rem;\r\n  color: #666;\r\n}\r\n\r\n.loading-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.loading-spinner {\r\n  background-color: white;\r\n  padding: 2rem;\r\n  border-radius: 12px;\r\n  text-align: center;\r\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.spinner {\r\n  width: 40px;\r\n  height: 40px;\r\n  border: 4px solid #f3f3f3;\r\n  border-top: 4px solid #007bff;\r\n  border-radius: 50%;\r\n  animation: spin 1s linear infinite;\r\n  margin: 0 auto 1rem;\r\n}\r\n\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n}\r\n\r\n/* 错误提示 */\r\n.error {\r\n  color: #721c24;\r\n  padding: 1rem 1.5rem;\r\n  background-color: #f8d7da;\r\n  border: 1px solid #f5c6cb;\r\n  border-radius: 8px;\r\n  margin: 1rem 0;\r\n  border-left: 4px solid #dc3545;\r\n}\r\n\r\n/* 流程分析结果样式 */\r\n.summary-section {\r\n  background-color: #f8f9fa;\r\n  padding: 1.5rem;\r\n  border-radius: 12px;\r\n  margin-bottom: 2rem;\r\n  border: 1px solid #e9ecef;\r\n}\r\n\r\n.summary-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  gap: 1rem;\r\n  margin-top: 1rem;\r\n}\r\n\r\n.summary-item {\r\n  background-color: white;\r\n  padding: 1rem;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\r\n  text-align: center;\r\n}\r\n\r\n.summary-item .label {\r\n  display: block;\r\n  font-weight: 600;\r\n  color: #6c757d;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.summary-item .value {\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  color: #007bff;\r\n}\r\n\r\n.error-section, .in-progress-section, .problematic-section {\r\n  margin-top: 2rem;\r\n  padding: 1.5rem;\r\n  background-color: #f8f9fa;\r\n  border-radius: 12px;\r\n  border: 1px solid #e9ecef;\r\n}\r\n\r\n.flow-item {\r\n  background-color: white;\r\n  padding: 1rem;\r\n  margin: 1rem 0;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.flow-item h5 {\r\n  margin: 0 0 0.5rem 0;\r\n  color: #2c3e50;\r\n  font-weight: 600;\r\n}\r\n\r\n.error-details {\r\n  background-color: white;\r\n  padding: 1rem;\r\n  border-radius: 8px;\r\n  margin-top: 1rem;\r\n  border-left: 4px solid #dc3545;\r\n}\r\n\r\nul {\r\n  margin: 0.5rem 0;\r\n  padding-left: 1.5rem;\r\n}\r\n\r\nli {\r\n  margin: 0.25rem 0;\r\n  color: #495057;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .module {\r\n    padding: 1rem;\r\n  }\r\n  \r\n  .file-upload-group {\r\n    grid-template-columns: 1fr;\r\n    gap: 1rem;\r\n  }\r\n  \r\n  .tabs {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .tab-button {\r\n    margin: 2px 0;\r\n  }\r\n  \r\n  .summary-grid, .info-grid {\r\n    grid-template-columns: 1fr;\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}