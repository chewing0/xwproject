{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport axios from 'axios';\nexport default {\n  name: 'ModuleOneView',\n  data() {\n    return {\n      selectedFile: null,\n      loading: false,\n      error: null,\n      analysisResult: null\n    };\n  },\n  methods: {\n    handleFileUpload(event) {\n      this.selectedFile = event.target.files[0];\n      this.error = null;\n      this.analysisResult = null;\n    },\n    async analyzeProtocol() {\n      if (!this.selectedFile) {\n        this.error = '请先选择文件';\n        return;\n      }\n      this.loading = true;\n      this.error = null;\n      this.analysisResult = null;\n      try {\n        const fileContent = await this.readFile(this.selectedFile);\n        const response = await axios.post('http://localhost:8000/api/analyze/', {\n          log_content: fileContent\n        });\n        this.analysisResult = response.data;\n      } catch (error) {\n        console.error('Error:', error);\n        this.error = error.response?.data?.error || '分析失败';\n      } finally {\n        this.loading = false;\n      }\n    },\n    readFile(file) {\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = e => resolve(e.target.result);\n        reader.onerror = e => reject(e);\n        reader.readAsText(file);\n      });\n    },\n    formatKey(key) {\n      return key.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n    },\n    formatValue(value) {\n      if (Array.isArray(value)) {\n        return value.join(', ');\n      }\n      return value;\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","selectedFile","loading","error","analysisResult","methods","handleFileUpload","event","target","files","analyzeProtocol","fileContent","readFile","response","post","log_content","console","file","Promise","resolve","reject","reader","FileReader","onload","e","result","onerror","readAsText","formatKey","key","split","map","word","charAt","toUpperCase","slice","join","formatValue","value","Array","isArray"],"sources":["D:\\wby\\projectfiles\\xwproject\\frontend\\src\\views\\Module1.vue"],"sourcesContent":["<template>\r\n  <div class=\"module\">\r\n    <h1>日志信令流程分析</h1>\r\n    <div class=\"content\">\r\n      <div class=\"upload-section\">\r\n        <input type=\"file\" @change=\"handleFileUpload\" accept=\".txt\" ref=\"fileInput\" />\r\n        <button @click=\"analyzeProtocol\" :disabled=\"!selectedFile\">分析日志</button>\r\n      </div>\r\n\r\n      <div v-if=\"loading\" class=\"loading\">\r\n        分析中...\r\n      </div>\r\n\r\n      <div v-if=\"error\" class=\"error\">\r\n        {{ error }}\r\n      </div>\r\n\r\n      <div v-if=\"analysisResult\" class=\"analysis-result\">\r\n        <h2>分析结果</h2>\r\n        \r\n        <!-- 摘要信息 -->\r\n        <div class=\"summary-section\">\r\n          <h3>摘要</h3>\r\n          <div class=\"summary-grid\">\r\n            <div class=\"summary-item\">\r\n              <span class=\"label\">总流程数:</span>\r\n              <span class=\"value\">{{ analysisResult.report.summary.total_flows }}</span>\r\n            </div>\r\n            <div class=\"summary-item\">\r\n              <span class=\"label\">已完成:</span>\r\n              <span class=\"value\">{{ analysisResult.report.summary.completed }}</span>\r\n            </div>\r\n            <div class=\"summary-item\">\r\n              <span class=\"label\">进行中:</span>\r\n              <span class=\"value\">{{ analysisResult.report.summary.in_progress }}</span>\r\n            </div>\r\n            <div class=\"summary-item\">\r\n              <span class=\"label\">未开始:</span>\r\n              <span class=\"value\">{{ analysisResult.report.summary.not_started }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 第一个错误信息 -->\r\n        <div class=\"error-section\" v-if=\"analysisResult.first_error.status !== 'all_flows_completed'\">\r\n          <h3>第一个错误</h3>\r\n          <div class=\"error-details\">\r\n            <p><strong>阻塞流程:</strong> {{ analysisResult.first_error.blocking_flow }}</p>\r\n            <p><strong>状态:</strong> {{ analysisResult.first_error.status }}</p>\r\n            <div v-if=\"analysisResult.first_error.status_details\">\r\n              <p v-for=\"(value, key) in analysisResult.first_error.status_details\" :key=\"key\">\r\n                <strong>{{ formatKey(key) }}:</strong> {{ formatValue(value) }}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 进行中的流程 -->\r\n        <div class=\"in-progress-section\" v-if=\"analysisResult.report.in_progress_flows.length > 0\">\r\n          <h3>进行中的流程</h3>\r\n          <div v-for=\"flow in analysisResult.report.in_progress_flows\" :key=\"flow.flow_name\" class=\"flow-item\">\r\n            <h4>{{ flow.flow_name }}</h4>\r\n            <p>进度: {{ flow.completed_steps }}/{{ flow.total_steps }}</p>\r\n            <div v-if=\"flow.missing_steps.length > 0\">\r\n              <p>缺失步骤:</p>\r\n              <ul>\r\n                <li v-for=\"(step, index) in flow.missing_steps\" :key=\"index\">\r\n                  {{ step.msg }} ({{ step.protocol }}, {{ step.dir }})\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 问题流程 -->\r\n        <div class=\"problematic-section\" v-if=\"analysisResult.report.problematic_flows.length > 0\">\r\n          <h3>问题流程</h3>\r\n          <div v-for=\"flow in analysisResult.report.problematic_flows\" :key=\"flow.flow_name\" class=\"flow-item\">\r\n            <h4>{{ flow.flow_name }}</h4>\r\n            <p>问题: {{ flow.issue }}</p>\r\n            <p>预期第一步: {{ flow.missing_initial_step.msg }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'ModuleOneView',\r\n  data() {\r\n    return {\r\n      selectedFile: null,\r\n      loading: false,\r\n      error: null,\r\n      analysisResult: null\r\n    }\r\n  },\r\n  methods: {\r\n    handleFileUpload(event) {\r\n      this.selectedFile = event.target.files[0]\r\n      this.error = null\r\n      this.analysisResult = null\r\n    },\r\n    async analyzeProtocol() {\r\n      if (!this.selectedFile) {\r\n        this.error = '请先选择文件'\r\n        return\r\n      }\r\n\r\n      this.loading = true\r\n      this.error = null\r\n      this.analysisResult = null\r\n\r\n      try {\r\n        const fileContent = await this.readFile(this.selectedFile)\r\n        const response = await axios.post('http://localhost:8000/api/analyze/', {\r\n          log_content: fileContent\r\n        })\r\n        this.analysisResult = response.data\r\n      } catch (error) {\r\n        console.error('Error:', error)\r\n        this.error = error.response?.data?.error || '分析失败'\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n    readFile(file) {\r\n      return new Promise((resolve, reject) => {\r\n        const reader = new FileReader()\r\n        reader.onload = (e) => resolve(e.target.result)\r\n        reader.onerror = (e) => reject(e)\r\n        reader.readAsText(file)\r\n      })\r\n    },\r\n    formatKey(key) {\r\n      return key.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')\r\n    },\r\n    formatValue(value) {\r\n      if (Array.isArray(value)) {\r\n        return value.join(', ')\r\n      }\r\n      return value\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.module {\r\n  padding: 2rem;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.content {\r\n  margin-top: 2rem;\r\n}\r\n\r\n.upload-section {\r\n  margin-bottom: 2rem;\r\n  display: flex;\r\n  gap: 1rem;\r\n  align-items: center;\r\n}\r\n\r\nbutton {\r\n  padding: 0.5rem 1rem;\r\n  background-color: #42b983;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:disabled {\r\n  background-color: #cccccc;\r\n  cursor: not-allowed;\r\n}\r\n\r\nbutton:hover:not(:disabled) {\r\n  background-color: #3aa876;\r\n}\r\n\r\n.loading {\r\n  text-align: center;\r\n  padding: 2rem;\r\n  color: #666;\r\n}\r\n\r\n.error {\r\n  color: #ff4444;\r\n  padding: 1rem;\r\n  background-color: #ffeeee;\r\n  border-radius: 4px;\r\n  margin: 1rem 0;\r\n}\r\n\r\n.analysis-result {\r\n  margin-top: 2rem;\r\n}\r\n\r\n.summary-section {\r\n  background-color: #f5f5f5;\r\n  padding: 1rem;\r\n  border-radius: 4px;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.summary-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  gap: 1rem;\r\n  margin-top: 1rem;\r\n}\r\n\r\n.summary-item {\r\n  background-color: white;\r\n  padding: 1rem;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n}\r\n\r\n.label {\r\n  font-weight: bold;\r\n  margin-right: 0.5rem;\r\n}\r\n\r\n.error-section,\r\n.in-progress-section,\r\n.problematic-section {\r\n  margin-top: 2rem;\r\n  padding: 1rem;\r\n  background-color: #f5f5f5;\r\n  border-radius: 4px;\r\n}\r\n\r\n.flow-item {\r\n  background-color: white;\r\n  padding: 1rem;\r\n  margin: 1rem 0;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n}\r\n\r\n.flow-item h4 {\r\n  margin: 0 0 0.5rem 0;\r\n  color: #2c3e50;\r\n}\r\n\r\n.error-details {\r\n  background-color: white;\r\n  padding: 1rem;\r\n  border-radius: 4px;\r\n  margin-top: 1rem;\r\n}\r\n\r\nul {\r\n  margin: 0.5rem 0;\r\n  padding-left: 1.5rem;\r\n}\r\n\r\nli {\r\n  margin: 0.25rem 0;\r\n}\r\n</style> "],"mappings":";;AAyFA,OAAOA,KAAI,MAAO,OAAM;AAExB,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,IAAI;MAClBC,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE,IAAI;MACXC,cAAc,EAAE;IAClB;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,gBAAgBA,CAACC,KAAK,EAAE;MACtB,IAAI,CAACN,YAAW,GAAIM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC;MACxC,IAAI,CAACN,KAAI,GAAI,IAAG;MAChB,IAAI,CAACC,cAAa,GAAI,IAAG;IAC3B,CAAC;IACD,MAAMM,eAAeA,CAAA,EAAG;MACtB,IAAI,CAAC,IAAI,CAACT,YAAY,EAAE;QACtB,IAAI,CAACE,KAAI,GAAI,QAAO;QACpB;MACF;MAEA,IAAI,CAACD,OAAM,GAAI,IAAG;MAClB,IAAI,CAACC,KAAI,GAAI,IAAG;MAChB,IAAI,CAACC,cAAa,GAAI,IAAG;MAEzB,IAAI;QACF,MAAMO,WAAU,GAAI,MAAM,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACX,YAAY;QACzD,MAAMY,QAAO,GAAI,MAAMf,KAAK,CAACgB,IAAI,CAAC,oCAAoC,EAAE;UACtEC,WAAW,EAAEJ;QACf,CAAC;QACD,IAAI,CAACP,cAAa,GAAIS,QAAQ,CAACb,IAAG;MACpC,EAAE,OAAOG,KAAK,EAAE;QACda,OAAO,CAACb,KAAK,CAAC,QAAQ,EAAEA,KAAK;QAC7B,IAAI,CAACA,KAAI,GAAIA,KAAK,CAACU,QAAQ,EAAEb,IAAI,EAAEG,KAAI,IAAK,MAAK;MACnD,UAAU;QACR,IAAI,CAACD,OAAM,GAAI,KAAI;MACrB;IACF,CAAC;IACDU,QAAQA,CAACK,IAAI,EAAE;MACb,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QACtC,MAAMC,MAAK,GAAI,IAAIC,UAAU,CAAC;QAC9BD,MAAM,CAACE,MAAK,GAAKC,CAAC,IAAKL,OAAO,CAACK,CAAC,CAAChB,MAAM,CAACiB,MAAM;QAC9CJ,MAAM,CAACK,OAAM,GAAKF,CAAC,IAAKJ,MAAM,CAACI,CAAC;QAChCH,MAAM,CAACM,UAAU,CAACV,IAAI;MACxB,CAAC;IACH,CAAC;IACDW,SAASA,CAACC,GAAG,EAAE;MACb,OAAOA,GAAG,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,IAAG,IAAKA,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,IAAIF,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG;IAC1F,CAAC;IACDC,WAAWA,CAACC,KAAK,EAAE;MACjB,IAAIC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;QACxB,OAAOA,KAAK,CAACF,IAAI,CAAC,IAAI;MACxB;MACA,OAAOE,KAAI;IACb;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}